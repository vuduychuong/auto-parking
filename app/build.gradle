apply plugin: 'com.android.application'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    applicationId "com.chuongvd.autoparking"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }


  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  dataBinding {
    enabled = true
  }
}

dependencies {
  // App's dependencies, including test
  compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
  compile "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
  compile "com.android.support:customtabs:$rootProject.supportLibraryVersion"
  compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
  compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
  // I/O, hashing, primitives, reflection, string processing, and much more!
  compile "com.google.guava:guava:$rootProject.guavaVersion"
  //Support ReactiveX android
  compile "io.reactivex:rxjava:$rootProject.rxjavaVersion"
  compile "io.reactivex:rxandroid:$rootProject.rxandroidVersion"
  // Dependencies for local unit tests
  testCompile "junit:junit:$rootProject.ext.junitVersion"
  // Espresso UI Testing
  androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
  //Using retrofit library for connect api service
  compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.rxAdapterVersion"
  compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
  compile "com.android.support:design:$rootProject.supportLibraryVersion"
}
